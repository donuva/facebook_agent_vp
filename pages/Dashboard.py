import streamlit as st
import pandas as pd
import numpy as np
from datetime import datetime, timedelta
import plotly.express as px
import plotly.graph_objects as go

# C·∫•u h√¨nh trang hi·ªÉn th·ªã
st.set_page_config(page_title="Chatbot Facebook Dashboard", layout="wide")

# ====== GI·∫¢ L·∫¨P D·ªÆ LI·ªÜU CHATBOT ======
np.random.seed(42)  # ƒê·∫∑t seed c·ªë ƒë·ªãnh ƒë·ªÉ c√≥ th·ªÉ t√°i hi·ªán d·ªØ li·ªáu
n = 500  # S·ªë l∆∞·ª£ng d√≤ng d·ªØ li·ªáu gi·∫£ l·∫≠p
start_date = datetime(2024, 1, 1)

# T·∫°o DataFrame v·ªõi c√°c tr∆∞·ªùng m√¥ ph·ªèng h·ªôi tho·∫°i chatbot
chat_df = pd.DataFrame({
    'timestamp': [start_date + timedelta(minutes=30*i) for i in range(n)],  # Gi·∫£ l·∫≠p th·ªùi gian c√°ch nhau 30 ph√∫t
    'user_id': np.random.randint(1, 100, n),  # Gi·∫£ l·∫≠p ID ng∆∞·ªùi d√πng t·ª´ 1 ƒë·∫øn 100
    'message': np.random.choice(['Hi', 'Order', 'Thanks', 'Help', 'CTA Clicked', 'Bye'], n),  # Tin nh·∫Øn m√¥ ph·ªèng
    'is_bot_reply': np.random.choice([True, False], n, p=[0.9, 0.1]),  # T·ª∑ l·ªá tr·∫£ l·ªùi b·ªüi bot (90%)
    'response_time': np.random.normal(2, 0.5, n).clip(min=0.5),  # Th·ªùi gian ph·∫£n h·ªìi trung b√¨nh ~2s
    'intent': np.random.choice(['greeting', 'order', 'thankyou', 'support', 'cta', 'goodbye'], n),  # Intent g√°n
    'clicked_cta': np.random.choice([True, False], n, p=[0.2, 0.8]),  # T·ª∑ l·ªá nh·∫•p CTA ~20%
    'rating': np.random.choice([1, 2, 3, 4, 5, None], n, p=[0.1, 0.1, 0.2, 0.3, 0.2, 0.1])  # Ph√¢n ph·ªëi ƒëi·ªÉm h√†i l√≤ng
})
chat_df['date'] = chat_df['timestamp'].dt.date  # Th√™m c·ªôt ng√†y ƒë·ªÉ nh√≥m th·ªëng k√™ theo ng√†y

# ====== T√çNH TO√ÅN CH·ªà S·ªê T·ªîNG H·ª¢P ======
total_msgs = len(chat_df)  # T·ªïng s·ªë tin nh·∫Øn
bot_replies = chat_df['is_bot_reply'].sum()  # S·ªë tin nh·∫Øn do bot ph·∫£n h·ªìi
success_rate = bot_replies / total_msgs  # T·ª∑ l·ªá bot ph·∫£n h·ªìi
avg_response = chat_df['response_time'].dropna().mean()  # Th·ªùi gian ph·∫£n h·ªìi TB
intent_counts = chat_df['intent'].value_counts()  # S·ªë l∆∞·ª£ng intent
cta_clicks = chat_df['clicked_cta'].sum()  # S·ªë l∆∞·ª£t nh·∫•p CTA
cta_rate = cta_clicks / total_msgs  # T·ª∑ l·ªá chuy·ªÉn ƒë·ªïi CTA
avg_rating = chat_df['rating'].dropna().mean()  # ƒêi·ªÉm h√†i l√≤ng trung b√¨nh
total_rated = chat_df['rating'].count()  # S·ªë l∆∞·ª£t ƒë√°nh gi√°
rating_dist = chat_df['rating'].value_counts().sort_index()  # Ph√¢n ph·ªëi ƒëi·ªÉm
msg_by_day = chat_df.groupby('date').size()  # S·ªë l∆∞·ª£ng tin nh·∫Øn theo ng√†y

# ====== DASHBOARD ======
st.title("ü§ñ Chatbot Facebook Analytics Dashboard")
st.markdown("### Ph√¢n t√≠ch hi·ªáu qu·∫£ chatbot Facebook t·ª± ƒë·ªông (d·ªØ li·ªáu demo)")

# 4 ch·ªâ s·ªë ch√≠nh
col1, col2, col3, col4 = st.columns(4)
col1.metric("T·ªïng tin nh·∫Øn", total_msgs)
col2.metric("T·ª∑ l·ªá tr·∫£ l·ªùi t·ª± ƒë·ªông", f"{success_rate:.2%}")
col3.metric("Th·ªùi gian ph·∫£n h·ªìi TB", f"{avg_response:.2f} gi√¢y")
col4.metric("ƒêi·ªÉm h√†i l√≤ng TB", f"{avg_rating:.2f}/5 ‚≠ê")

# Hi·ªÉn th·ªã b·∫£ng d·ªØ li·ªáu ƒë·∫ßy ƒë·ªß
with st.expander("üîç Xem b·∫£ng d·ªØ li·ªáu g·ªëc"):
    st.dataframe(chat_df)

st.markdown("---")

# Tabs chia n·ªôi dung th√†nh 3 ph·∫ßn ch√≠nh
tab1, tab2, tab3 = st.tabs(["Bi·ªÉu ƒë·ªì t·ªïng quan", "Ph√¢n t√≠ch chi ti·∫øt", "T∆∞∆°ng t√°c theo th·ªùi gian"])

# ====== TAB 1: Bi·ªÉu ƒë·ªì t·ªïng quan ======
with tab1:
    c1, c2 = st.columns([1, 1])
    with c1:
        # Bi·ªÉu ƒë·ªì c·ªôt: intent ph·ªï bi·∫øn
        intent_df = intent_counts.reset_index()
        intent_df.columns = ['intent', 'count']
        fig1 = px.bar(intent_df, x='intent', y='count',
                      labels={'intent': 'Intent', 'count': 'S·ªë l∆∞·ª£t'},
                      color='count',
                      title="Intent ph·ªï bi·∫øn nh·∫•t")
        st.plotly_chart(fig1, use_container_width=True)

    with c2:
        # Bi·ªÉu ƒë·ªì donut: t·ª∑ l·ªá nh·∫•p CTA
        cta_data = pd.DataFrame({
            'Lo·∫°i': ['Nh·∫•p CTA', 'Kh√¥ng nh·∫•p'],
            'S·ªë l∆∞·ª£ng': [cta_clicks, total_msgs - cta_clicks]
        })
        fig2 = px.pie(cta_data, values='S·ªë l∆∞·ª£ng', names='Lo·∫°i', hole=0.5,
                      color_discrete_sequence=px.colors.sequential.RdBu,
                      title="T·ª∑ l·ªá chuy·ªÉn ƒë·ªïi CTA")
        st.plotly_chart(fig2, use_container_width=True)

    c3, c4 = st.columns([1, 1])
    with c3:
        # Gauge: ƒë√°nh gi√° trung b√¨nh
        fig3 = go.Figure(go.Indicator(
            mode="gauge+number",
            value=avg_rating,
            gauge={
                'axis': {'range': [0, 5]},
                'bar': {'color': "#21B573"},
                'steps': [
                    {'range': [0, 2], 'color': "#FFC4C4"},
                    {'range': [2, 4], 'color': "#FFD59E"},
                    {'range': [4, 5], 'color': "#C8E6C9"}
                ],
            },
            title={'text': "ƒêi·ªÉm h√†i l√≤ng trung b√¨nh"}
        ))
        st.plotly_chart(fig3, use_container_width=True)

    with c4:
        # Bi·ªÉu ƒë·ªì ph√¢n ph·ªëi rating
        fig4 = px.bar(x=rating_dist.index, y=rating_dist.values,
                      labels={'x': 'Rating', 'y': 'S·ªë l∆∞·ª£ng'},
                      color=rating_dist.values,
                      color_continuous_scale="Viridis",
                      title="Ph√¢n ph·ªëi ƒëi·ªÉm h√†i l√≤ng")
        st.plotly_chart(fig4, use_container_width=True)

# ====== TAB 2: Ph√¢n t√≠ch chi ti·∫øt ======
with tab2:
    st.markdown("#### S·ªë l∆∞·ª£ng tin nh·∫Øn theo intent")
    st.dataframe(intent_counts.rename_axis("Intent").reset_index(name="S·ªë l∆∞·ª£ng"))
    
    st.markdown("#### Th·ªëng k√™ chuy·ªÉn ƒë·ªïi CTA & ƒë√°nh gi√°")
    st.metric("S·ªë l∆∞·ª£t nh·∫•p CTA", cta_clicks)
    st.metric("T·ªïng l∆∞·ª£t ƒë√°nh gi√°", total_rated)

# ====== TAB 3: T∆∞∆°ng t√°c theo th·ªùi gian ======
with tab3:
    st.markdown("#### L∆∞·ª£t tin nh·∫Øn m·ªói ng√†y")
    fig5 = px.line(x=msg_by_day.index, y=msg_by_day.values,
                   labels={'x': 'Ng√†y', 'y': 'S·ªë tin nh·∫Øn'},
                   title="T∆∞∆°ng t√°c ng∆∞·ªùi d√πng theo ng√†y")
    st.plotly_chart(fig5, use_container_width=True)

    # N·∫øu c·∫ßn, c√≥ th·ªÉ th√™m b·ªô l·ªçc ng√†y t·∫°i ƒë√¢y

# ====== CH√ÇN TRANG ======
st.markdown("""
---
*TEAM 202*
""")
